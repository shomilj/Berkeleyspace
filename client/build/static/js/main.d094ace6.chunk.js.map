{"version":3,"sources":["components/home/navbar.js","redux/actionTypes.js","components/home/filterview.js","redux/actions.js","components/home/cell.js","redux/selectors.js","components/home/listview.js","components/home/detailview.js","components/home/home.js","App.js","reportWebVitals.js","redux/reducers/posts.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["NavigationBar","Navbar","bg","style","maxHeight","Brand","className","href","Collapse","id","Nav","Link","UPDATE_SEARCH","SELECT_POST","SEARCH_TYPES","value","label","SORT_TYPES","metadata","require","courses","map","course","professors","profs","prof","FilterBox","props","updateQuestion","question","setState","updateSort","sort","updateSearch","state","updateMode","mode","updateCourses","updateProfessors","updateTags","tags","enteredSearchTerm","e","keyCode","ReactGA","pageview","window","location","pathname","search","Col","height","maxWidth","minWidth","overflowY","borderLeft","Form","Row","Control","placeholder","this","onChange","target","onKeyDown","options","filter","t","isClearable","isMulti","x","includes","React","connect","filters","dispatch","fetch","method","headers","body","JSON","stringify","then","data","json","type","payload","newData","Cell","onClick","dangerouslySetInnerHTML","__html","title","datePosted","ListView","didSelectPost","selectPost","borderRight","posts","allPosts","length","post","Date","date","toLocaleDateString","store","getPostState","getPosts","content","postContent","DetailView","emptyPage","postPage","loadingDetail","selectedPost","child","Badge","variant","color","fontSize","children","Card","width","borderColor","followup","getSelectedPostState","getSelectedPost","Home","Container","fluid","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","initialize","render","document","getElementById"],"mappings":"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","file":"static/js/main.d094ace6.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nexport default function NavigationBar() {\n    return (\n        <Navbar bg=\"light\" style={{maxHeight: \"10vh\"}}>\n            <Navbar.Brand className=\"bt-bold\" href=\"/\">EECS 101</Navbar.Brand>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n                <Nav.Link className=\"bt-bold nav-link\" href=\"/\">Home</Nav.Link>\n                {/* <Nav.Link className=\"bt-bold nav-link\" href=\"/about\">About</Nav.Link> */}\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}","export const UPDATE_SEARCH = \"UPDATE_SEARCH\";\nexport const SELECT_POST = \"SELECT_POST\";\n","\nimport { Row, Col, Form } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport { updateSearch } from \"../../redux/actions\";\n\nimport ReactGA from 'react-ga';\nimport * as React from 'react';\nimport Select from 'react-select'\n\nconst SEARCH_TYPES = [\n  { value: 'auto', label: 'Auto'},\n  { value: 'exact', label: 'Exact'},\n  { value: 'fuzzy', label: 'Fuzzy'},\n  { value: 'title', label: 'Title Only'}\n]\n\nconst SORT_TYPES = [\n  {value: 'auto', label: 'Auto'},\n  {value: 'date', label: 'Date'},\n]\n\nconst metadata = require('../../metadata.json');\nconst courses = metadata.courses.map((course) => {\n  return {value: course, label: course}\n});\nconst professors = metadata.profs.map((prof) => {\n  return {value: prof, label: prof}\n});\n\nclass FilterBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { question: [], mode: 'auto', sort: 'auto', courses: [], professors: [], tags: [] }\n  }\n  \n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n\n  updateQuestion = question => {\n    this.setState({question: question}, () => {\n      // this.props.updateSearch(this.state)\n    })\n  }\n  updateSort = sort => {\n    this.setState({sort: sort.value}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateMode = mode => {\n    this.setState({mode: mode.value}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateCourses = courses => {\n    this.setState({courses: courses}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateProfessors = professors => {\n    this.setState({professors: professors}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateTags = tags => {\n    this.setState({tags: tags}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n\n  enteredSearchTerm = (e) => {\n    if (e.keyCode == 13) {\n      this.props.updateSearch(this.state)\n      // var query = []\n      // var parts = this.state.question.split(' ');\n      // var coursesToAdd = [];\n      // for (var i = 0; i < parts.length; i++) {\n      //   var part = parts[i];\n      //   if (coursemap[part.toLowerCase()] != null) {\n      //     if (i > 0 && ['cs', 'ee', 'eecs'].includes(parts[i-1].toLowerCase())) {\n      //       query[i-1] = ''\n      //     };\n      //     coursesToAdd.push(coursemap[part.toLowerCase()]);\n      //   } else {\n      //     query.push(part);\n      //   }\n      // }\n      // var existingCourses = this.state.courses;\n      // for (var i = 0; i < coursesToAdd; i++) {\n      //   if (!existingCourses.includes(coursesToAdd[i])) {\n      //     existingCourses.push(coursesToAdd[i]);\n      //   }\n      // }\n      // console.log('Courses: ' + existingCourses);\n      // this.setState({question: query.join(' '), courses: existingCourses}, () => {\n      //   this.props.updateSearch(this.state)\n      // });\n    }\n  }\n\n\n  render() {\n    return (\n      <Col style={{height: \"90vh\", maxWidth: \"25%\", minWidth: \"200px\",  overflowY: \"auto\", borderLeft: \"0.1px solid #ecf0f1\"}}>\n        <Form className=\"m-3\">\n          <Row className=\"my-4\">\n            <h5>Filters</h5>\n          </Row>\n          <Row className=\"my-4\">\n            <Form.Control placeholder=\"Search for a question...\" value={this.state.question} onChange={e => this.updateQuestion(e.target.value)} onKeyDown={this.enteredSearchTerm}/>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6 className=\"my-1\">Search Type</h6>\n              <Select options={SEARCH_TYPES} onChange={e => this.updateMode(e)} value={SEARCH_TYPES.filter((t) => t.value == this.state.mode)}/>\n            </div>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6 className=\"my-1\">Sort By</h6>\n              <Select options={SORT_TYPES} onChange={e => this.updateSort(e)} value={SORT_TYPES.filter((t) => t.value == this.state.sort)}/>\n            </div>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6 className=\"my-1\">Courses</h6>\n              <Select isClearable isMulti options={courses} onChange={e => this.updateCourses(e ? e.map(x => x.value) : [])} value={courses.filter((t) => this.state.courses.includes(t.value))} placeholder=\"Filter by course.\" />\n            </div>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6 className=\"my-1\">Professors</h6>\n              <Select isClearable isMulti options={professors} onChange={e => this.updateProfessors(e ? e.map(x => x.value) : [])} placeholder=\"Filter by professor.\" />\n            </div>\n          </Row>\n          {/* <Row className=\"my-4\">\n            <h6>Tags</h6>\n            <div style={{minWidth: \"100%\"}}>\n              <Select isClearable isMulti options={tags} onChange={e => this.updateTags(e.map(x => x.value))} placeholder=\"Filter by type.\" />\n            </div>\n          </Row> */}\n        </Form>\n      </Col>\n      )\n  }\n}\n\nexport default connect(\n  null,\n  { updateSearch }\n)(FilterBox);","import { UPDATE_SEARCH, SELECT_POST } from \"./actionTypes\";\n\nexport const updateSearch = filters => {\n    return (dispatch) => {\n        fetch('/query', {method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(filters)})\n        .then(data => data.json())\n        .then(data => {\n            dispatch({\n                type: UPDATE_SEARCH,\n                payload: {newData: data}\n            })\n        })\n    }\n}\n\nexport const selectPost = id => {\n    return (dispatch) => {\n        fetch('/content', {method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({'id': id})})\n        .then(data => data.json())\n        .then(content => {\n            dispatch({\n                type: SELECT_POST,\n                payload: {postContent: content}\n            })\n        })\n    }\n}","import * as React from 'react';\n\nexport default function Cell(props) {\n    return (\n        <div>\n            <div className=\"filter-card\" onClick={props.onClick}>\n                <div className=\"filter-card-container\">\n                    <div className=\"filter-card-info\">\n                        <h6 dangerouslySetInnerHTML={{__html: props.title}}></h6>\n                        <p className=\"filter-card-info-desc\">{props.datePosted}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","export const getPostState = store => store.posts;\nexport const getSelectedPostState = store => store.posts.selectedPost;\n\nexport const getPosts = store => {\n  return getPostState(store)\n}\n\nexport const getSelectedPost = store => {\n  return getSelectedPostState(store)\n}","import * as React from 'react';\nimport { Col } from 'react-bootstrap';\nimport Cell from './cell';\nimport { connect } from \"react-redux\";\nimport { getPosts } from \"../../redux/selectors\";\n\nimport { selectPost } from \"../../redux/actions\";\n\nclass ListView extends React.Component {\n\n    didSelectPost = (id) => {\n        var x = () => {\n            this.props.selectPost(id);\n        }\n        return x;\n    }\n\n    render() {\n        return (\n            <Col style={{height: \"90vh\", maxWidth: \"25%\", minWidth: \"200px\", overflowY: \"auto\", borderRight: \"0.1px solid #ecf0f1\", borderLeft: \"0.1px solid #ecf0f1\"}}>\n                <div style={{height: \"0px\"}}>\n                    {\n                        this.props.posts && this.props.posts.allPosts.length ? this.props.posts.allPosts.map((post) => {\n                            return <Cell key={`post-${post.id}`} title={post.title} datePosted={new Date(post.date).toLocaleDateString(\"en-US\")} onClick={this.didSelectPost(post.id)}/>\n                        })\n                        : \"\"\n                    }\n                </div>\n            </Col>\n        )\n    }\n\n}\n  \nconst mapStateToProps = state => {\n    const posts = getPosts(state);\n    return { posts };\n};\n\nexport default connect(\n    mapStateToProps,\n    { selectPost }\n)(ListView);","import * as React from \"react\";\nimport { Row, Col, Card, Badge } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { getSelectedPost } from \"../../redux/selectors\";\n\n/* The DetailView component is the component that displays detailed information about a post,\n    including the post content and followups. */\nclass DetailView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.selectedPost = null;\n  }\n\n  emptyPage = () => {\n    return \"Empty page.\";\n  };\n\n  postPage = () => {\n    return (\n      <div>\n        {this.props.loadingDetail ? (\n          <div style={{ height: \"1005\" }} className=\"justify-content-md-center\">\n          </div>\n        ) : (\n          <div>\n            <Row className=\"m-1\">\n              <h3\n                dangerouslySetInnerHTML={{\n                  __html: this.props.selectedPost.title,\n                }}\n              ></h3>\n            </Row>\n            <Row className=\"m-1\">\n              {this.props.selectedPost.courses\n                ? this.props.selectedPost.courses.map((child) => {\n                    return (\n                      <Badge className=\"m-1\" variant=\"info\">\n                        {child}\n                      </Badge>\n                    );\n                  })\n                : \"\"}\n              {this.props.selectedPost.professors\n                ? this.props.selectedPost.professors.map((child) => {\n                    return (\n                      <Badge className=\"m-1\" variant=\"success\">\n                        {child}\n                      </Badge>\n                    );\n                  })\n                : \"\"}\n              {this.props.selectedPost.tags\n                ? this.props.selectedPost.tags.map((child) => {\n                    return (\n                      <Badge className=\"m-1\" variant=\"warning\">\n                        {child}\n                      </Badge>\n                    );\n                  })\n                : \"\"}\n            </Row>\n            <Row className=\"m-1\">\n              {this.props.selectedPost.date ? (\n                <p\n                  className=\"m-1\"\n                  style={{ color: \"lightgray\", fontSize: \"14px\" }}\n                >\n                  Posted on{\" \"}\n                  {new Date(this.props.selectedPost.date).toLocaleDateString(\n                    \"en-US\"\n                  )}\n                  .\n                </p>\n              ) : (\n                \"\"\n              )}\n            </Row>\n            <Row className=\"mt-4 m-2\">\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: this.props.selectedPost.content,\n                }}\n                style={{ fontSize: \"14px\" }}\n              ></p>\n            </Row>\n\n            {this.props.selectedPost.children\n              ? this.props.selectedPost.children.map((child) => {\n                  return (\n                    <Card\n                      className=\"my-2\"\n                      style={{ width: \"100%\", borderColor: \"#ededed\" }}\n                    >\n                      <div className=\"m-2\">\n                        <p\n                          className=\"m-1\"\n                          dangerouslySetInnerHTML={{ __html: child.content }}\n                          style={{ fontSize: \"14px\" }}\n                        ></p>\n                        <p\n                          className=\"mx-1 my-2\"\n                          style={{ fontSize: \"10px\", color: \"gray\" }}\n                        >\n                          {child.date}\n                        </p>\n                        {child.children.map((followup) => {\n                          return (\n                            <Card\n                              className=\"my-2\"\n                              style={{ width: \"100%\", borderColor: \"#ededed\" }}\n                            >\n                              <div className=\"m-2\">\n                                <p\n                                  dangerouslySetInnerHTML={{\n                                    __html: followup.content,\n                                  }}\n                                  className=\"m-1\"\n                                  style={{ fontSize: \"14px\" }}\n                                ></p>\n                                <p\n                                  className=\"mx-1 my-2\"\n                                  style={{ fontSize: \"10px\", color: \"gray\" }}\n                                >\n                                  {new Date(followup.date).toLocaleDateString(\n                                    \"en-US\"\n                                  )}\n                                </p>\n                              </div>\n                            </Card>\n                          );\n                        })}\n                      </div>\n                    </Card>\n                  );\n                })\n              : \"\"}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"m-1\" style={{ overflowY: \"auto\", height: \"90vh\" }}>\n        {this.props.selectedPost ? this.postPage() : this.emptyPage()}\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const selectedPost = getSelectedPost(state);\n  return { selectedPost: selectedPost };\n};\n\nexport default connect(mapStateToProps)(DetailView);\n","import * as React from 'react';\nimport NavigationBar from './navbar.js'\nimport FilterView from './filterview.js'\nimport ListView from './listview.js'\nimport DetailView from './detailview.js'\nimport { Row, Container } from 'react-bootstrap';\n\n/*\nReact Architecture:\n\nNavBar => Component\nFilters => Component\nCardList => Component\nCardView => Component\n*/\n\nexport default function Home() {\n    return (\n        <div>\n            <NavigationBar />\n            <Container className=\"my-3\" fluid>\n                <Row>\n                    <FilterView />\n                    <ListView />\n                    <DetailView />\n                </Row>\n            </Container>\n        </div>\n    );\n}","import './App.css';\nimport Home from './components/home/home'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\"> <Home /> </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SELECT_POST, UPDATE_SEARCH } from \"../actionTypes\";\n\nconst initialState = {\n  allPosts: [],\n  selectedPost: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SEARCH: {\n      const { newData } = action.payload;\n      return {\n        ...state,\n        allPosts: newData\n      };\n    }\n    case SELECT_POST: {\n      const { postContent } = action.payload;\n      return {\n        ...state,\n        selectedPost: postContent\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport posts from \"./posts\";\n\nexport default combineReducers({ posts });\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from 'redux-thunk';\n\n\nexport default createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\nimport ReactGA from 'react-ga';\n\n/* Initialize Google Analytics. */\nReactGA.initialize('G-ZMDNDHM5EN');\n\nconst renderApp = () => {\n  render (\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('./App', renderApp)\n}\n\nrenderApp()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}