{"version":3,"sources":["components/home/navbar.js","redux/actionTypes.js","components/home/filterview.js","redux/actions.js","components/home/cell.js","redux/selectors.js","components/home/listview.js","components/home/detailview.js","components/home/home.js","App.js","reportWebVitals.js","redux/reducers/posts.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["NavigationBar","Navbar","bg","style","maxHeight","Brand","className","href","Collapse","id","Nav","Link","UPDATE_SEARCH","SELECT_POST","SEARCH_TYPES","value","label","SORT_TYPES","metadata","require","courses","map","course","professors","profs","prof","FilterBox","coursemap","props","updateQuestion","question","setState","updateSort","sort","updateSearch","state","updateMode","mode","updateCourses","updateProfessors","updateTags","tags","enteredSearchTerm","e","keyCode","Col","height","maxWidth","minWidth","overflowY","borderLeft","Form","Row","Control","placeholder","this","onChange","target","onKeyDown","options","filter","t","isClearable","isMulti","x","includes","React","connect","filters","dispatch","fetch","method","headers","body","JSON","stringify","then","data","json","type","payload","newData","Cell","onClick","dangerouslySetInnerHTML","__html","title","datePosted","ListView","didSelectPost","selectPost","borderRight","posts","allPosts","length","post","Date","date","toLocaleDateString","store","getPostState","getPosts","content","postContent","DetailView","emptyPage","postPage","selectedPost","child","Badge","variant","color","fontSize","children","Card","width","borderColor","followup","getSelectedPostState","getSelectedPost","Home","Container","fluid","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.996682fb.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Navbar, Nav, Row, Col, Card, Badge, Container, Form, Button } from 'react-bootstrap';\n\nexport default function NavigationBar() {\n    return (\n        <Navbar bg=\"light\" style={{maxHeight: \"10vh\"}}>\n            <Navbar.Brand className=\"bt-bold\" href=\"/\">Berkeleyspace</Navbar.Brand>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n                <Nav.Link className=\"bt-bold nav-link\" href=\"/\">Home</Nav.Link>\n                <Nav.Link className=\"bt-bold nav-link\" href=\"/about\">About</Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}","export const UPDATE_SEARCH = \"UPDATE_SEARCH\";\nexport const SELECT_POST = \"SELECT_POST\";\n","\nimport { Navbar, Nav, Row, Col, Card, Badge, Container, Form, Button } from 'react-bootstrap';import { connect } from \"react-redux\";\nimport { updateSearch } from \"../../redux/actions\";\n\nimport * as React from 'react';\nimport Select from 'react-select'\n\nconst SEARCH_TYPES = [\n  { value: 'auto', label: 'Auto'},\n  { value: 'exact', label: 'Exact'},\n  { value: 'title', label: 'Title Only'}\n]\n\nconst SORT_TYPES = [\n  { value: 'auto', label: 'Auto'},\n  { value: 'date', label: 'Date'}\n]\n\nconst metadata = require('../../metadata.json');\nconst courses = metadata.courses.map((course) => {\n  return {value: course, label: course}\n});\nconst professors = metadata.profs.map((prof) => {\n  return {value: prof, label: prof}\n});\nconst coursemap = metadata.coursemap;\n\nconst tags = [\n  { value: 'workload', label: 'workload' },\n  { value: 'scheduling', label: 'scheduling' }\n]\n\nclass FilterBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { question: [], mode: 'auto', sort: 'auto', courses: [], professors: [], tags: [] }\n  }\n  \n  updateQuestion = question => {\n    this.setState({question: question}, () => {\n      // this.props.updateSearch(this.state)\n    })\n  }\n  updateSort = sort => {\n    this.setState({sort: sort.value}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateMode = mode => {\n    this.setState({mode: mode.value}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateCourses = courses => {\n    this.setState({courses: courses}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateProfessors = professors => {\n    this.setState({professors: professors}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n  updateTags = tags => {\n    this.setState({tags: tags}, () => {\n      this.props.updateSearch(this.state)\n    })\n  }\n\n  enteredSearchTerm = (e) => {\n    if (e.keyCode == 13) {\n      this.props.updateSearch(this.state)\n      // var query = []\n      // var parts = this.state.question.split(' ');\n      // var coursesToAdd = [];\n      // for (var i = 0; i < parts.length; i++) {\n      //   var part = parts[i];\n      //   if (coursemap[part.toLowerCase()] != null) {\n      //     if (i > 0 && ['cs', 'ee', 'eecs'].includes(parts[i-1].toLowerCase())) {\n      //       query[i-1] = ''\n      //     };\n      //     coursesToAdd.push(coursemap[part.toLowerCase()]);\n      //   } else {\n      //     query.push(part);\n      //   }\n      // }\n      // var existingCourses = this.state.courses;\n      // for (var i = 0; i < coursesToAdd; i++) {\n      //   if (!existingCourses.includes(coursesToAdd[i])) {\n      //     existingCourses.push(coursesToAdd[i]);\n      //   }\n      // }\n      // console.log('Courses: ' + existingCourses);\n      // this.setState({question: query.join(' '), courses: existingCourses}, () => {\n      //   this.props.updateSearch(this.state)\n      // });\n    }\n  }\n\n\n  render() {\n    return (\n      <Col style={{height: \"90vh\", maxWidth: \"25%\", minWidth: \"200px\",  overflowY: \"auto\", borderLeft: \"0.1px solid #ecf0f1\"}}>\n        <Form className=\"m-3\">\n          <Row className=\"my-4\">\n            <h5>Filters</h5>\n          </Row>\n          <Row className=\"my-4\">\n            <Form.Control placeholder=\"Search for a question...\" value={this.state.question} onChange={e => this.updateQuestion(e.target.value)} onKeyDown={this.enteredSearchTerm}/>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6>Search Type</h6>\n              <Select options={SEARCH_TYPES} onChange={e => this.updateMode(e)} value={SEARCH_TYPES.filter((t) => t.value == this.state.mode)}/>\n            </div>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6>Sort By</h6>\n              <Select options={SORT_TYPES} onChange={e => this.updateSort(e)} value={SORT_TYPES.filter((t) => t.value == this.state.sort)}/>\n            </div>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6>Courses</h6>\n              <Select isClearable isMulti options={courses} onChange={e => this.updateCourses(e ? e.map(x => x.value) : [])} value={courses.filter((t) => this.state.courses.includes(t.value))} placeholder=\"Filter by course.\" />\n            </div>\n          </Row>\n          <Row className=\"my-4\">\n            <div style={{minWidth: \"100%\"}}>\n              <h6>Professors</h6>\n              <Select isClearable isMulti options={professors} onChange={e => this.updateProfessors(e ? e.map(x => x.value) : [])} placeholder=\"Filter by professor.\" />\n            </div>\n          </Row>\n          {/* <Row className=\"my-4\">\n            <h6>Tags</h6>\n            <div style={{minWidth: \"100%\"}}>\n              <Select isClearable isMulti options={tags} onChange={e => this.updateTags(e.map(x => x.value))} placeholder=\"Filter by type.\" />\n            </div>\n          </Row> */}\n        </Form>\n      </Col>\n      )\n  }\n}\n\nexport default connect(\n  null,\n  { updateSearch }\n)(FilterBox);","import { UPDATE_SEARCH, SELECT_POST } from \"./actionTypes\";\n\nexport const updateSearch = filters => {\n    return (dispatch) => {\n        fetch('http://localhost:8080/query', {method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(filters)})\n        .then(data => data.json())\n        .then(data => {\n            dispatch({\n                type: UPDATE_SEARCH,\n                payload: {newData: data}\n            })\n        })\n    }\n}\n\nexport const selectPost = id => {\n    return (dispatch) => {\n        fetch('http://localhost:8080/content', {method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({'id': id})})\n        .then(data => data.json())\n        .then(content => {\n            dispatch({\n                type: SELECT_POST,\n                payload: {postContent: content}\n            })\n        })\n    }\n}","import * as React from 'react';\nimport { Navbar, Nav, Row, Col, Card, Badge, Container, Form, Button } from 'react-bootstrap';\n\nexport default function Cell(props) {\n    return (\n        <div>\n            <div className=\"filter-card\" onClick={props.onClick}>\n                <div className=\"filter-card-container\">\n                    <div className=\"filter-card-info\">\n                        <h6 dangerouslySetInnerHTML={{__html: props.title}}></h6>\n                        <p className=\"filter-card-info-desc\">{props.datePosted}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","export const getPostState = store => store.posts;\nexport const getSelectedPostState = store => store.posts.selectedPost;\n\nexport const getPosts = store => {\n  return getPostState(store)\n}\n\nexport const getSelectedPost = store => {\n  return getSelectedPostState(store)\n}","import * as React from 'react';\nimport { Navbar, Nav, Col, Card, Badge, Container, Form, Button } from 'react-bootstrap';\nimport Cell from './cell';\nimport { connect } from \"react-redux\";\nimport { getPosts } from \"../../redux/selectors\";\n\nimport { selectPost } from \"../../redux/actions\";\n\nclass ListView extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    didSelectPost = (id) => {\n        var x = () => {\n            this.props.selectPost(id);\n        }\n        return x;\n    }\n\n    render() {\n        return (\n            <Col style={{height: \"90vh\", maxWidth: \"25%\", minWidth: \"200px\", overflowY: \"auto\", borderRight: \"0.1px solid #ecf0f1\", borderLeft: \"0.1px solid #ecf0f1\"}}>\n                <div style={{height: \"0px\"}}>\n                    {\n                        this.props.posts && this.props.posts.allPosts.length ? this.props.posts.allPosts.map((post) => {\n                            return <Cell key={`post-${post.id}`} title={post.title} datePosted={new Date(post.date).toLocaleDateString(\"en-US\")} onClick={this.didSelectPost(post.id)}/>\n                        })\n                        : \"\"\n                    }\n                </div>\n            </Col>\n        )\n    }\n\n}\n  \nconst mapStateToProps = state => {\n    const posts = getPosts(state);\n    return { posts };\n};\n\nexport default connect(\n    mapStateToProps,\n    { selectPost }\n)(ListView);","import * as React from 'react';\nimport { Navbar, Nav, Row, Col, Card, Badge, Container, Form, Button } from 'react-bootstrap';\nimport Cell from './cell';\nimport { connect } from \"react-redux\";\nimport { getSelectedPost } from \"../../redux/selectors\";\n\nclass DetailView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.selectedPost = null;\n    }\n\n    emptyPage = () => {\n        return 'Empty page.'\n    }\n\n    postPage = () => {\n        return (\n            <div>\n                <Row className=\"m-1\">\n                <h3 dangerouslySetInnerHTML={{__html: this.props.selectedPost.title}}></h3></Row>\n            <Row className=\"m-1\">\n                {this.props.selectedPost.courses ? this.props.selectedPost.courses.map((child) => {\n                    return (\n                        <Badge className=\"m-1\" variant=\"info\">{child}</Badge>\n                    )\n                }) : ''}\n                {this.props.selectedPost.professors ? this.props.selectedPost.professors.map((child) => {\n                    return (\n                        <Badge className=\"m-1\" variant=\"success\">{child}</Badge>\n                    )\n                }) : ''}\n                {this.props.selectedPost.tags ? this.props.selectedPost.tags.map((child) => {\n                    return (\n                        <Badge className=\"m-1\" variant=\"warning\">{child}</Badge>\n                    )\n                }) : ''}\n            </Row>\n            <Row className=\"m-1\">\n                {this.props.selectedPost.date ? <p className=\"m-1\" style={{color: 'lightgray', fontSize: \"14px\"}}>Posted on {new Date(this.props.selectedPost.date).toLocaleDateString(\"en-US\")}.</p> : ''}\n            </Row>\n            <Row className=\"mt-4 m-2\">\n                <p dangerouslySetInnerHTML={{__html: this.props.selectedPost.content}} style={{fontSize: \"14px\"}}>\n                    \n                </p>\n            </Row>\n            \n            {\n                this.props.selectedPost.children ?\n                this.props.selectedPost.children.map((child) => {\n                    return (\n                        <Card className=\"my-2\" style={{width: \"100%\", borderColor: \"#ededed\"}}>\n                            <div className=\"m-2\">\n                                <p className=\"m-1\" dangerouslySetInnerHTML={{__html: child.content}} style={{fontSize: \"14px\"}}>\n                                </p>\n                                <p className=\"mx-1 my-2\" style={{fontSize: \"10px\", color: \"gray\"}}>\n                                    {child.date}\n                                </p>\n                                {child.children.map((followup) => {\n                                    return (\n                                        <Card className=\"my-2\" style={{width: \"100%\", borderColor: \"#ededed\"}}>\n                                            <div className=\"m-2\">\n                                                <p dangerouslySetInnerHTML={{__html: followup.content}} className=\"m-1\" style={{fontSize: \"14px\"}}>\n                                                </p>\n                                                <p className=\"mx-1 my-2\" style={{fontSize: \"10px\", color: \"gray\"}}>\n                                                    {followup.date}\n                                                </p>\n                                            </div>\n                                        </Card>\n                                    )\n                                })}\n                            </div>\n                        </Card>\n                    )\n                }) : ''\n            }\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Col className=\"m-1\" style={{overflowY: \"auto\", height: \"90vh\"}}>\n                {this.props.selectedPost ? this.postPage() : this.emptyPage()\n                }\n            </Col>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    // const posts = getPosts(state);\n    // return { posts };\n    const selectedPost = getSelectedPost(state);\n    return {selectedPost};\n};\n\nexport default connect(\n    mapStateToProps\n)(DetailView);","import * as React from 'react';\nimport NavigationBar from './navbar.js'\nimport FilterView from './filterview.js'\nimport ListView from './listview.js'\nimport DetailView from './detailview.js'\nimport { Navbar, Nav, Row, Col, Card, Badge, Container, Form, Button } from 'react-bootstrap';\n\n/*\nReact Architecture:\n\nNavBar => Component\nFilters => Component\nCardList => Component\nCardView => Component\n*/\n\nexport default function Home() {\n    return (\n        <div>\n            <NavigationBar />\n            <Container className=\"my-3\" fluid>\n                <Row>\n                    <FilterView />\n                    <ListView />\n                    <DetailView />\n                </Row>\n            </Container>\n        </div>\n    );\n}","import './App.css';\nimport { Row, Col, Card, Badge, Form } from 'react-bootstrap';\nimport Select from 'react-select'\nimport Home from './components/home/home'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nconst courses = [\n  { value: '161', label: 'CS 161' },\n  { value: '170', label: 'CS 170' },\n  { value: '188', label: 'CS 188' }\n]\n\nconst professors = [\n  { value: 'sahai', label: 'Anant Sahai' },\n  { value: 'weaver', label: 'Nicholas Weaver'}\n]\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/\"> <Home /> </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SELECT_POST, UPDATE_SEARCH } from \"../actionTypes\";\n\nconst initialState = {\n  allPosts: [],\n  selectedPost: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SEARCH: {\n      const { newData } = action.payload;\n      return {\n        ...state,\n        allPosts: newData\n      };\n    }\n    case SELECT_POST: {\n      const { postContent } = action.payload;\n      return {\n        ...state,\n        selectedPost: postContent\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport posts from \"./posts\";\n\nexport default combineReducers({ posts });\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from 'redux-thunk';\n\n\nexport default createStore(rootReducer, applyMiddleware(thunk));","import React from 'react';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport store from './redux/store'\n\nconst renderApp = () => {\n  render (\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('./App', renderApp)\n}\n\nrenderApp()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}